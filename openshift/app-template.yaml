apiVersion: v1
kind: Template
labels:
  template: php-kafka-demo
metadata:
  annotations:
    openshift.io/display-name: Openshift PHP Kafka demo
    description: >-
      A sample application that creates a provider and a consumer
      with Kafka instance to act as a queue broker   
    tags: 'php-kafka-demo'
  name: php-kafka-demo
parameters:
  - name: NAME
    description: The name of the application
    displayName: Name
    required: true
    value: php-kafka-demo
  - name: SERVICE_NAME
    description: The name of the service for accesing the app
    displayName: Service Name
    required: true
    value: php-kafka-demo-service
  - name: SOURCE_REPOSITORY_URL
    description: The URL of the repository with your application source code.
    displayName: Git Repository URL
    required: true
    value: 'https://github.com/ivanovaleksandar/openshift-php-kafka-demo.git'
  - name: SOURCE_REPOSITORY_REF
    description: Set the branch name if you are not using master branch
    displayName: Git Reference    
    value: master
    required: false
  - name: KAFKA_SERVICE_NAME
    description: The name of the service for accesing Kafka
    displayName: Kafka Service Name
    required: true
    value: kafka


objects:
  - kind: BuildConfig
    apiVersion: v1    
    metadata:
      annotations:
        description: Defines how to build the application
      name: '${NAME}'
    spec:
      source:
        type: Git
        git:
          ref: '${SOURCE_REPOSITORY_REF}'
          uri: '${SOURCE_REPOSITORY_URL}'
        contextDir: '${CONTEXT_DIR}'
      strategy:
        dockerStrategy:
          dockerfilePath: Dockerfile
      output:
        to:
          kind: ImageStreamTag
          name: '${NAME}:latest'
  - kind: ImageStream
    apiVersion: v1    
    metadata:
      annotations:
        description: Keeps track of changes in the application image
      name: '${NAME}'
  - kind: DeploymentConfig
    apiVersion: v1
    metadata:
      name: '${NAME}-producer'
    spec:
      strategy:
        type: Rolling
      triggers:
        - type: ImageChange
          imageChangeParams:
            automatic: true
            containerNames:
              - php-producer
            from:
              kind: ImageStreamTag
              name: '${NAME}:latest'
        - type: ConfigChange
      replicas: 1
      selector:
        name: '${NAME}'
      template:
        metadata:
          name: '${NAME}'
          labels:
            name: '${NAME}'
        spec:
          containers:
            - name: php-producer
              image: '${NAME}:latest'
              command: 'php'
              args: 'run_producer.php'
              env: 
                - name: KAFKA_SERVICE_NAME
                  value: '${KAFKA_SERVICE_NAME}'

  - kind: DeploymentConfig
    apiVersion: v1
    metadata:
      name: '${NAME}-consumer'
    spec:
      strategy:
        type: Rolling
      triggers:
        - type: ImageChange
          imageChangeParams:
            automatic: true
            containerNames:
              - php-consumer
            from:
              kind: ImageStreamTag
              name: '${NAME}:latest'
        - type: ConfigChange
      replicas: 1
      selector:
        name: '${NAME}'
      template:
        metadata:
          name: '${NAME}'
          labels:
            name: '${NAME}'
        spec:
          containers:
            - name: php-consumer
              image: '${NAME}:latest'
              command: 'php'
              args: 'run_consumer.php'
              env: 
                - name: KAFKA_SERVICE_NAME
                  value: '${KAFKA_SERVICE_NAME}'
                  
                  